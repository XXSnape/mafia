from contextlib import suppress

from aiogram.exceptions import TelegramAPIError
from cache.cache_types import (
    GameCache,
    RolesLiteral,
    UserIdInt,
)
from general.groupings import Groupings
from general.text import NUMBER_OF_DAY
from mafia.roles.base import ActiveRoleAtNightABC
from mafia.roles.base.mixins import (
    ProcedureAfterNightABC,
)
from mafia.roles.base.roles import RoleABC
from mafia.roles.descriptions.description import RoleDescription
from mafia.roles.descriptions.texts import CANT_CHOOSE_IN_ROW
from states.game import UserFsm
from utils.pretty_text import make_build
from utils.roles import (
    get_processed_role_and_user_if_exists,
    get_processed_user_id_if_exists,
)
from utils.tg import ban_user


class Prosecutor(
    ProcedureAfterNightABC,
    ActiveRoleAtNightABC,
):
    role = "–ü—Ä–æ–∫—É—Ä–æ—Ä"
    role_id: RolesLiteral = "prosecutor"
    mail_message = "–ö–æ–≥–æ –∞—Ä–µ—Å—Ç–æ–≤–∞—Ç—å —ç—Ç–æ–π –Ω–æ—á—å—é?"
    photo = (
        "https://avatars.mds.yandex.net/i?"
        "id=b5115d431dafc24be07a55a8b6343540_l-5205087-"
        "images-thumbs&n=13"
    )
    purpose = "–¢–µ–±–µ –Ω–µ–ª—å–∑—è –¥–æ–ø—É—Å—Ç–∏—Ç—å, —á—Ç–æ–±—ã –¥–Ω—ë–º –º–∞—Ñ–∏—è –∏–ª–∏ –∏–Ω—ã–µ –∏–∑–≤–µ—Ä–≥–∏ –º–æ–≥–ª–∏ –≥–æ–≤–æ—Ä–∏—Ç—å –∏ –≥–æ–ª–æ—Å–æ–≤–∞—Ç—å."
    message_to_group_after_action = (
        "–ü–æ –¥–∞–Ω–Ω—ã–º —Ä–∞–∑–≤–µ–¥–∫–∏ –ø–æ—Ç–µ–Ω—Ü–∏–∞–ª—å–Ω—ã–π –∑–ª–æ—É–º—ã—à–ª–µ–Ω–Ω–∏–∫ –∞—Ä–µ—Å—Ç–æ–≤–∞–Ω!"
    )
    message_to_user_after_action = "–¢—ã –≤—ã–±—Ä–∞–ª –∞—Ä–µ—Å—Ç–æ–≤–∞—Ç—å {url}"
    payment_for_murder = 12

    @property
    def role_description(self) -> RoleDescription:
        return RoleDescription(
            skill="–ñ–µ—Ä—Ç–≤–∞ –Ω–µ —Å–º–æ–∂–µ—Ç –≥–æ–≤–æ—Ä–∏—Ç—å –¥–Ω—ë–º, –≥–æ–ª–æ—Å–æ–≤–∞—Ç—å –∏ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–∞—Ç—å —É–±–∏–π—Å—Ç–≤–æ",
            pay_for=["–ê—Ä–µ—Å—Ç –∏–≥—Ä–æ–∫–∞ –Ω–µ —Å–æ—é–∑–Ω–æ–π –≥—Ä—É–ø–ø–∏—Ä–æ–≤–∫–∏"],
            limitations=[CANT_CHOOSE_IN_ROW],
        )

    @get_processed_user_id_if_exists
    async def procedure_after_night(
        self,
        game_data: GameCache,
        processed_user_id: UserIdInt,
        **kwargs,
    ):
        game_data["cant_talk"].append(processed_user_id)
        game_data["cant_vote"].append(processed_user_id)
        with suppress(TelegramAPIError):
            await self.bot.send_message(
                chat_id=processed_user_id,
                text=make_build(
                    NUMBER_OF_DAY.format(
                        game_data["number_of_night"]
                    )
                    + "üö´–¢–µ–±–µ –∑–∞–ø—Ä–µ—Ç–∏–ª–∏ –æ–±—â–∞—Ç—å—Å—è –∏ –ø—Ä–∏–Ω–∏–º–∞—Ç—å —É—á–∞—Å—Ç–∏–µ –≤ –≤—ã–±–æ—Ä–∞—Ö –Ω–∞ 1 –¥–µ–Ω—å"
                ),
                protect_content=game_data["settings"][
                    "protect_content"
                ],
            )
        await ban_user(
            bot=self.bot,
            chat_id=game_data["game_chat"],
            user_id=processed_user_id,
        )

    @get_processed_role_and_user_if_exists
    async def accrual_of_overnight_rewards(
        self,
        game_data: GameCache,
        processed_role: RoleABC,
        user_url: str,
        processed_user_id: UserIdInt,
        **kwargs,
    ):
        money = (
            0
            if processed_role.grouping == Groupings.civilians
            else 20
        )
        self.add_money_to_all_allies(
            game_data=game_data,
            money=money,
            user_url=user_url,
            processed_role=processed_role,
            beginning_message="–ê—Ä–µ—Å—Ç",
        )

    def __init__(self):
        self.state_for_waiting_for_action = (
            UserFsm.PROSECUTOR_ARRESTS
        )
