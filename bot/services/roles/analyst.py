from aiogram.types import InlineKeyboardButton
from cache.cache_types import GameCache
from constants.output import MONEY_SYM
from keyboards.inline.cb.cb_text import DRAW_CB
from services.roles.base import ActiveRoleAtNight, Role
from services.roles.base.mixins import ProcedureAfterVoting
from states.states import UserFsm
from utils.validators import get_processed_user_id_if_exists


class Analyst(ProcedureAfterVoting, ActiveRoleAtNight):
    role = "–ü–æ–ª–∏—Ç–∏—á–µ—Å–∫–∏–π –∞–Ω–∞–ª–∏—Ç–∏–∫"
    photo = "https://habrastorage.org/files/2e3/371/6a2/2e33716a2bb74f8eb67378334960ebb5.png"
    purpose = "–¢–µ–±–µ –Ω—É–∂–Ω–æ –Ω–∞ –æ—Å–Ω–æ–≤–µ —Ä–∞–Ω–µ–µ –ø–æ–ª—É—á–µ–Ω–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö –ø—Ä–µ–¥—Å–∫–∞–∑–∞—Ç—å, –∫–æ–≥–æ –ø–æ–≤–µ—Å—è—Ç –Ω–∞ –¥–Ω–µ–≤–Ω–æ–º –≥–æ–ª–æ—Å–æ–≤–∞–Ω–∏–∏"
    do_not_choose_others = 0
    do_not_choose_self = 0
    is_self_selecting = True
    mail_message = "–ö–æ–≥–æ –ø–æ–≤–µ—Å—è—Ç —Å–µ–≥–æ–¥–Ω—è –¥–Ω—ë–º?"
    message_to_group_after_action = (
        "–°–æ—Å—Ç–∞–≤–ª—è–µ—Ç—Å—è –ø—Ä–æ–≥–Ω–æ–∑ –Ω–∞ –∑–∞–≤—Ç—Ä–∞—à–Ω–∏–π –¥–µ–Ω—å"
    )
    message_to_user_after_action = (
        "–¢—ã –ø—Ä–µ–¥–ø–æ–ª–æ–∂–∏–ª, —á—Ç–æ –ø–æ–≤–µ—Å—è—Ç {url}"
    )
    payment_for_treatment = 5
    payment_for_murder = 5

    def __init__(self):
        self.state_for_waiting_for_action = UserFsm.ANALYST_ASSUMES

    def generate_markup(
        self,
        player_id: int,
        game_data: GameCache,
        extra_buttons: tuple[InlineKeyboardButton, ...] = (),
    ):
        extra_buttons = (
            InlineKeyboardButton(
                text="–ù–∏–∫–æ–≥–æ –Ω–µ –ø–æ–≤–µ—Å—è—Ç",
                callback_data=DRAW_CB,
            ),
        )
        return super().generate_markup(
            player_id=player_id,
            game_data=game_data,
            extra_buttons=extra_buttons,
        )

    @get_processed_user_id_if_exists
    async def take_action_after_voting(
        self,
        game_data: GameCache,
        removed_user: list[int],
        processed_user_id: int,
        **kwargs,
    ):
        number_of_day = game_data["number_of_night"]
        removed_user = removed_user[0]
        url = (
            None
            if removed_user == 0
            else game_data["players"][str(removed_user)]["url"]
        )
        role = (
            None
            if removed_user == 0
            else game_data["players"][str(removed_user)][
                "pretty_role"
            ]
        )
        if processed_user_id == removed_user:
            money = 22
            to_group = "–í—Å–µ, –∫—Ç–æ —á–∏—Ç–∞–ª –ø—Ä–æ–≥–Ω–æ–∑—ã –Ω–∞ –¥–µ–Ω—å, –±—ã–ª–∏ –≥–æ—Ç–æ–≤—ã –∫ –¥–Ω–µ–≤–Ω—ã–º —Å–æ–±—ã—Ç–∏—è–º!"
            achievement = (
                f"–£–¥–∞—á–∞! –î–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ –Ω–∏–∫–æ–≥–æ –Ω–µ –ø–æ–≤–µ—Å–∏–ª–∏ - {money}{MONEY_SYM}"
                if url is None
                else f"–£–¥–∞—á–Ω—ã–π –ø—Ä–æ–≥–Ω–æ–∑! –ë—ã–ª –ø–æ–≤–µ—à–µ–Ω {url} ({role}) - {money}{MONEY_SYM}"
            )
        else:
            money = 0
            to_group = "–û–±–º–∞–Ω –∏–ª–∏ —á—ë—Ä–Ω—ã–π –ª–µ–±–µ–¥—å? –ê–Ω–∞–ª–∏—Ç–∏—á–µ—Å–∫–∏–µ –ø—Ä–æ–≥–Ω–æ–∑—ã –Ω–µ —Å–±—ã–ª–∏—Å—å!"
            achievement = (
                f"–ù–µ—É–¥–∞—á–∞! –ù–∏–∫–æ–≥–æ –Ω–µ –ø–æ–≤–µ—Å–∏–ª–∏ - {money}{MONEY_SYM}"
                if url is None
                else f"–ù–µ—É–¥–∞—á–Ω—ã–π –ø—Ä–æ–≥–Ω–æ–∑! –ë—ã–ª –ø–æ–≤–µ—à–µ–Ω {url} ({role}) - {money}{MONEY_SYM}"
            )
        await self.bot.send_message(
            chat_id=game_data["game_chat"],
            text=to_group,
        )
        for player_id in game_data[self.roles_key]:
            game_data["players"][str(player_id)][
                "achievements"
            ].append(
                f"üåü–ì–æ–ª–æ—Å–æ–≤–∞–Ω–∏–µ –¥–Ω—è {number_of_day}.\n{achievement}"
            )
            game_data["players"][str(player_id)]["money"] += money
