services:
  redis:
    image: redis:7.4-alpine
    ports:
      - 6379:6379
    volumes:
      - ./redis_data:/data
    healthcheck:
      test: [ "CMD", "redis-cli", "-a", "ping" ]
      interval: 5s
      timeout: 3s
      retries: 3

  postgres:
    image: postgres:14.8-alpine3.18
    ports:
      - 5432:5432
    volumes:
      - ./db/:/var/lib/postgresql/data
    env_file:
      - .env
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 5s
      timeout: 3s
      retries: 3

  rabbitmq:
    image: rabbitmq:alpine
    ports:
      - 5672:5672
    volumes:
      - ./rabbitmq_data:/data
    env_file:
      - .env
    healthcheck:
      test: ["CMD", "rabbitmqctl", "status"]
      interval: 5s
      timeout: 3s
      retries: 3

  bot:
    build:
      context: .
      dockerfile: Dockerfile.bot
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
      faststream:
        condition: service_started

    command: sh -c "
      alembic upgrade head &&
      cd bot &&
      python main.py
      "
    restart: on-failure
    volumes:
      - ./faiss_db:/mafia/faiss_db

  faststream:
    build:
      context: .
      dockerfile: Dockerfile.faststream
    depends_on:
      rabbitmq:
        condition: service_healthy
    command: sh -c "
      cd bot &&
      faststream run tasks.game:app
      "
    restart: on-failure

